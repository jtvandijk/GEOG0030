{"title":"Accessibility Analysis","markdown":{"headingText":"Accessibility Analysis","containsRefs":false,"markdown":"Accessibility is often described as the ease with which individuals can reach places and opportunities, such as employment, public services, and cultural activities. We can utilise transport network data to quantify accessibility and characterise areas based on their accessibility levels. This week, we will use the `dodgr` R library to measure accessibility between different points of interest by calculating the network distances between them.\n\n## Lecture slides\nYou can download the slides of this week's lecture here: [[Link]]({{< var slides.week08 >}}).\n\n## Reading list\n#### Essential readings {.unnumbered}\n- Geurs, K. and Van Wee, B. 2004. Accessibility evaluation of land-use and transport strategies: review and research directions. *Journal of Transport Geography* 12(2): 127-140. [[Link]](https://doi.org/10.1016/j.jtrangeo.2003.10.005)\n- Higgins, C., Palm, M. DeJohn, A. *et al.* 2022. Calculating place-based transit accessibility: Methods, tools and algorithmic dependence. *Journal of Transport and Land Use* 15(1): 95-116. [[Link]](https://doi.org/10.5198/jtlu.2022.2012)\n- Verduzco Torres, J. R. and McArthur, D.P. 2024. Public transport accessibility indicators to urban and regional services in Great Britain. *Scientific Data* 11: 53. [[Link]](https://doi.org/10.1038/s41597-023-02890-w)\n\n#### Suggested readings {.unnumbered}\n- Pänkänen, M., Tenkanen, H., and Mladenovíc, M. 2024. Spatial accessibility and transport inequity in Finland: Open source models and perspectives from planning practice. *Computers, Environment and Urban Systems* 116: 102218. [[Link]](https://doi.org/10.1016/j.compenvurbsys.2024.102218)\n- Van Dijk, J., Krygsman, S. and De Jong, T. 2015. Toward spatial justice: The spatial equity effects of a toll road in Cape Town, South Africa. *Journal of Transport and Land Use* 8(3): 95-114. [[Link]](https://doi.org/10.5198/jtlu.2015.555)\n- Van Dijk, J. and De Jong, T. 2017. Post-processing GPS-tracks in reconstructing travelled routes in a GIS-environment: network subset selection and attribute adjustment. *Annals of GIS* 23(3): 203-217. [[Link]](https://doi.org/10.1080/19475683.2017.1340340)\n\n## Accessibility in Lambeth\nThis week, we will analyse the accessibility of fast-food outlets in the London Borough of Lambeth. Specifically, we will examine how closely these outlets are located within walking distance of primary and secondary schools, and explore any potential relationships between their proximity and the relative levels of deprivation in the area.\n\nWe will extract the points of interest that we will use for this analysis from the [Point of Interest (POI) data for the United Kingdom](https://journals.sagepub.com/doi/10.1177/23998083241263124), obtained from the [Overture Maps Foundation](https://overturemaps.org/) and pre-processed by the [Consumer Data Research Centre](https://data.cdrc.ac.uk/dataset/point-interest-data-united-kingdom#data-and-resources) to provide users with easy access.\n\nYou can download a subset of the POI dataset via the link provided below. A copy of the 2011 London LSOAs spatial boundaries, the boundaries of the London Boroughs, and the 2019 English [Index of Multiple Deprivation](https://www.gov.uk/government/statistics/english-indices-of-deprivation-2019). Save these files in your project folder under `data`.\n\n| File                                        | Type   | Link |\n| :------                                     | :------| :------ |\n| Lambeth Overture Points of Interest 2024    | `GeoPackage` | [Download](https://github.com/jtvandijk/GEOG0030/raw/refs/heads/main/data/spatial/Lambeth-POI-2024.gpkg) |\n| London LSOA 2011 Spatial Boundaries         | `GeoPackage` | [Download](https://github.com/jtvandijk/GEOG0030/raw/refs/heads/main/data/spatial/London-LSOA-2011.gpkg) |\n| London Borough Spatial Boundaries           | `GeoPackage` | [Download](https://github.com/jtvandijk/GEOG0030/raw/refs/heads/main/data/spatial/London-Boroughs.gpkg) |\n| England 2019 Index of Multiple Deprivation  | `csv` | [Download](https://github.com/jtvandijk/GEOG0030/tree/master/data/attributes/England-IMD-2019.csv) |\n\n::: {.callout-tip}\nYou may have already downloaded some of these datasets in previous weeks, but for completeness, they are all provided here. Only download the datasets you do not already have or did not save.\n:::\n\n::: {.callout-note}\nTo extract the Lambeth Overture Points of Interest data, a 2-kilometre buffer was applied around the boundaries of Lambeth. This approach ensures that points just outside the study area are included, as locations beyond the borough boundary may still be accessible to residents and could represent the nearest available options.\n:::\n\nOpen a new script within your `GEOG0030` project and save this as `w08-accessibility-analysis.r`. \n\nWe will start by loading the libraries that we will need:\n\n```{r}\n#| label: 08-options\n#| echo: False\n#| eval: True\n#| output: False\n# max print\noptions(max.print = 50)\n```\n\n```{r}\n#| label: 08-load-libraries\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| output: False\n#| tidy: True\n#| filename: 'R code'\n# load libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tmap)\nlibrary(osmdata)\nlibrary(dodgr)\n```\n\n::: {.callout-warning}\nYou may have to install some of these libraries if you have not used these before.\n:::\n\nNext, we can load the spatial data into R.\n\n```{r}\n#| label: 08-load-data\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n# read poi data\npoi24 <- st_read('data/spatial/Lambeth-POI-2024.gpkg')\n\n# read lsoa dataset\nlsoa11 <- st_read('data/spatial/London-LSOA-2011.gpkg')\n\n# read borough dataset\nborough <- st_read('data/spatial/London-Boroughs.gpkg')\n```\n\nNow, carefully examine each individual dataframe to understand how the data is structured and what information it contains.\n\n```{r}\n#| label: 08-inspect-data\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n# inspect poi data\nhead(poi24)\n\n# inspect lsoa dataset\nhead(lsoa11)\n\n# inspect borough dataset\nhead(borough)\n```\n\n### POI data\nThe inspection shows that the POI dataset contains a wide variety of location types, with each point tagged under a main and alternative category, as provided by the Overture Maps Foundation via Meta and Microsoft. However, these tags may not be consistent across the dataset, so we will need to identify specific keywords to filter the `main_category` and `alternate_category` columns. \n\nWe will start by filtering out all POIs where the word `school` features in the `main_category` column:\n\n```{r}\n#| label: 08-school-data\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n# filter school poi data\npoi_schools <- poi24 |>\n  filter(str_detect(main_category, 'school'))\n\n# inspect\nhead(unique(poi_schools$main_category), n = 50)\n```\n\n::: {.callout-tip}\nYou can further inspect the results using the `View()` function. \n:::\n\nThis is still a very large list, and looking at the categories not all POIs containing the string `school` should be included. However, this initial selection has given us a more manageable list from which we can choose the relevant tags. We can now further filter the dataset as well as clip the dataset to the administrative boundaries of Lambeth.\n\n```{r}\n#| label: 08-school-data-filter1\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| warning: False\n#| filename: 'R code'\n\n# remove quotes for easier processing\npoi_schools <- poi_schools |>\n  mutate(main_category = str_replace_all(main_category, '\\\"',''))\n\n# filter school poi data\npoi_schools <- poi_schools |>\n  filter(main_category == 'elementary_school' |\n         main_category == 'high_school' |\n         main_category == 'middle_school' |\n         main_category == 'private_school' |\n         main_category == 'public_school' |\n         main_category == 'school')\n\n# filter school poi data \nlambeth <- borough |>\n  filter(name == 'Lambeth')\n\npoi_schools <- poi_schools |>\n  st_intersection(lambeth) |>\n  select(1:11)\n\n# inspect\npoi_schools\n```\n\nThis is still a rather long list and likely inaccurate. According to [Lambeth Council Education Statistics](https://www.lambeth.gov.uk/sites/default/files/2024-07/Education_Statistics_2023-24.pdf), there should be 80 primary and secondary schools across the borough. We can use the `alternate_category` column to further narrow down our results.\n\n::: {.callout-tip}\nYou can inspect the different tags and their frequencies easily by creating a frequency table: `table(poi_schools$alternate_category)`.\n:::\n\n```{r}\n#| label: 08-school-data-filter2\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n\n# filter school poi data \npoi_schools <- poi_schools |>\n  filter(str_detect(alternate_category, 'elementary_school') |\n         str_detect(alternate_category, 'high_school') |\n         str_detect(alternate_category, 'middle_school') |\n         str_detect(alternate_category, 'private_school') |\n         str_detect(alternate_category, 'public_school'))\n\n# inspect\npoi_schools\n```\n\nSince the POI dataset is compiled from various open sources, the data quality is not guaranteed. Some schools may be missing, while others could be duplicated, perhaps under slightly different names or because different buildings have been assigned separate point locations. However, it is unlikely that more than one school would share the same postcode. Therefore, we will use postcode information (where available) to finalise our school selection and remove any likely duplicates.\n\n```{r}\n#| label: 08-school-data-filter3\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n\n# identify duplicate postcodes\npoi_schools <- poi_schools |>\n  group_by(postcode) |>\n  mutate(rank = rank(primary_name)) |>\n  ungroup()\n\n# filter school poi data \npoi_schools <- poi_schools |>\n  filter(is.na(postcode) | rank == 1) |>\n  select(-rank)\n\n# inspect\npoi_schools\n```\n\nAlthough we now have fewer schools than we had expected, either due to overly restrictive filtering of tags or because some school locations are not recorded in the dataset, we will proceed with the current data.\n\n::: {.callout-important}\nVariable preparation can be a time-consuming process that often necessitates a more extensive exploratory analysis to ensure sufficient data quality. This may involve sourcing additional data to supplement your existing dataset.\n:::\n\nWe can use a similar approach to approximate the locations of fast food outlets in the Borough.\n\n```{r}\n#| label: 08-fastfood-data\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n# filter fast food poi data\npoi_fastfood <- poi24 |>\n  filter(str_detect(main_category, 'fast_food_restaurant') |\n         str_detect(alternate_category, 'fast_food_restaurant') |\n         str_detect(alternate_category, 'chicken_restaurant') |\n         str_detect(alternate_category, 'burger_restaurant'))\n\n# inspect\npoi_fastfood\n```\n\nLet's map both datasets to get an idea of how the data look like:\n\n```{r tidy='styler'} \n#| label: fig-08-poi-map\n#| fig-cap: Extracted school and fast food locations for Lambeth.\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| filename: 'R code'\n# combine for mapping\npoi_schools <- poi_schools |>\n  mutate(type = 'School')\npoi_fastfood <- poi_fastfood |>\n  mutate(type = 'Fast food')\npoi_lambeth <- rbind(poi_schools, poi_fastfood)\n\n# shape, polygon\ntm_shape(lambeth) +\n  \n  # specify colours\n  tm_polygons(\n    col = '#f0f0f0', \n  ) +\n  \n# shape, points\ntm_shape(poi_lambeth) + \n  \n  # specify column, colours\n  tm_dots(\n    col = 'type',\n    size = 0.05,\n    palette = c('#beaed4','#fdc086'),\n    title = ''\n  ) +\n  \n  # set layout\n  tm_layout(\n    legend.outside = TRUE,\n    legend.position = c('right', 'bottom'),\n    legend.text.size = 1,\n    frame = FALSE\n  )\n```\n\n### Network data\nIn addition to the locations of interest, we need network data to assess the accessibility of schools in relation to fast food outlets. We will use [OpenStreetMap](https://www.openstreetmap.org/#map=6/54.91/-3.43) to extract road segment data. Similar to the POI dataset, OSM uses `key` and `value` tags to categorise the features within its dataset.\n\n::: {.callout-note}\nOpenStreetMap (OSM) is a free, editable map of the world, but its coverage is uneven globally. However, the accuracy and quality of the data can at times be questionable, with details such as road types and speed limits missing. The [OpenStreetMap Wiki](https://wiki.openstreetmap.org/wiki/Tags) provides more details on the tagging system.\n:::\n\nTo download the Lambeth road network dataset, we first need to define our bounding box coordinates. We will then use these coordinates in our OSM query to extract specific types of road segments within the defined search area. Our focus will be on selecting all OSM features with the `highway` tag that are likely to be used by pedestrians (e.g. excluding `motorways`).\n\n```{r} \n#| label: 08-network-data\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| warning: False\n#| cache: True\n#| filename: 'R code'\n\n# define our bbox coordinates, use WGS84\nbbox_lambeth <- poi24 |>\n  st_transform(4326) |>\n  st_bbox()\n  \n# osm query\nosm_network <- opq(bbox = bbox_lambeth ) |>\n  add_osm_feature(\n    key = 'highway', \n    value = c('primary', 'secondary', 'tertiary', 'residential', 'path', 'footway', 'unclassified', 'living_street', 'pedestrian')) |> \n  osmdata_sf()\n```\n\n::: {.callout-warning}\nIn some cases, the OSM query may return an error, particularly when multiple users from the same location are executing the exact same query. If so, you can download a prepared copy of the data here: [[Download]](https://github.com/jtvandijk/GEOG0030/raw/refs/heads/main/data/spatial/London-OSM-Roads.RData). You can load this copy into R through `load('data/spatial/London-OSM-Roads.RData')`\n:::\n\nThe returned `osm_network` object contains a variety of elements with the specified tags. Our next step is to extract the spatial data from this object to create our road network dataset. Specifically, we will extract the edges of the network, which represent the lines of the roads, as well as the nodes, which represent the points where the roads start, end, or intersect.\n\n```{r}\n#| label: 08-network-data-load\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n\n# extract the nodes, with their osm_id\nosm_network_nodes <- osm_network$osm_points[, 'osm_id']\n\n# extract the edges, with their osm_id and relevant columns\nosm_network_edges <- osm_network$osm_lines[, c('osm_id', 'name', 'highway', 'maxspeed', 'oneway')]\n\n# inspect\nhead(osm_network_nodes)\n\n# inspect\nhead(osm_network_edges)\n```\n\nWe can quickly map the network edges to see how the road network looks like:\n\n```{r tidy='styler'} \n#| label: fig-08-netx-map\n#| fig-cap: Extracted OpenStreetMap road network data for Lambeth.\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| filename: 'R code'\n# shape, polygon\ntm_shape(osm_network_edges) +\n  \n  # specify column, classes\n  tm_lines(\n    col = '#bdbdbd', \n    lwd = 0.2,\n  ) +\n  \n  # shape, polygon\n  tm_shape(lambeth) +\n  \n  # specify column, classes\n  tm_borders(\n    col = '#252525', \n    lwd = 2\n  ) +\n  \n  # set legend\n  tm_add_legend(\n    type = 'line', \n    labels = 'Road segments', \n    col = '#bdbdbd'\n  ) +\n  \n  tm_add_legend(\n    type = 'line', \n    labels = 'Outline Lambeth', \n    col = '#252525'\n  ) +\n  \n  # set layout\n  tm_layout(\n    frame = FALSE,\n    legend.outside = TRUE,\n    legend.position = c('right', 'bottom'),\n    legend.text.size = 1\n  )\n```\n\n### Network preparation\nSince our focus is on schoolchildren and walking distances, we will overwrite the `oneway` variable to assume that none of the road segments are restricted to one-way traffic. This adjustment will ensure our analysis is not skewed by such restrictions and will help maintain a more accurate representation of the general connectivity of the network.\n\n```{r} \n#| label: 08-network-one-way\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n\n# overwrite one-way default\nosm_network_edges$oneway <- 'no'\n```\n\nNow we have the network edges, we can turn this into a graph-representation that allows for the calculation of network-based accessibility statistics with our prepared point of interest data.\n\nIn any network analysis, the primary data structure is a graph composed of nodes and edges. The `dodgr` library utilises weighting profiles to assign weights based on road types, tailored to the mode of transport that each profile is designed to model. In this instance, we will use the `foot` weighting profile, as our focus is on modelling walking accessibility. To prevent errors related to the weighting profile, we will replace any `NA` values in the highway tag with the value `unclassified`.\n\n```{r} \n#| label: 08-network-graph\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n\n# replace missing highway tags with unclassified \nosm_network_edges <- osm_network_edges |>\n  mutate(highway = if_else(is.na(highway), 'unclassified', highway))\n\n# create network graph \nosm_network_graph <- weight_streetnet(osm_network_edges, wt_profile = 'foot')\n```\n\nOnce we have constructed our graph, we can use it to calculate network distances between our points of interest. One important consideration is that not all individual components in the extracted network may be connected. This can occur, for example, if the bounding box cuts off access to the road of a [cul-de-sac](https://en.wikipedia.org/wiki/Dead_end_(street)). To ensure that our entire extracted network is connected, we will therefore extract the largest connected component of the graph. \n\n::: {.callout-note}\nThe `dodgr` package documentation explains that components are numbered in order of decreasing size, with `$component = 1` always representing the largest component. It is essential to inspect the resulting subgraph to ensure that its coverage is adequate for analysis.\n:::\n\n```{r} \n#| label: 08-connected-network-graph\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n\n# extract the largest connected graph component\nnetx_connected <- osm_network_graph[osm_network_graph$component == 1, ]\n\n# inspect number of remaining road segments\nnrow(netx_connected)\n```\n\n::: {.callout-warning}\nOpenStreetMap is a dynamic dataset, meaning that changes are made on a continuous basis. As a result, it is quite possible that the number of remaining road segments, as shown above, may differ slightly when you run this analysis.\n:::\n\n### Accessibility analysis\nNow that we have our connected subgraph, we can use the `dodgr_distances()` function to calculate the network distances between every possible origin (i.e. school) and destination (i.e. fast food outlet). For all combinations, the function will map the point of interest locations to the nearest point on the network and return the corresponding shortest-path distances. \n\n::: {.callout-tip}\nThe `dodgr` package requires data to be projected in WGS84, so we need to reproject our point of interest data accordingly.\n:::\n\n```{r} \n#| label: 08-distance-matrix\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| message: False\n#| filename: 'R code'\n\n# reproject\npoi_schools <- poi_schools |>\n  st_transform(4326)\npoi_fastfood <- poi_fastfood |>\n  st_transform(4326)\n\n# distance matrix \ndistance_matrix <- dodgr_distances(\n  netx_connected,\n  from=st_coordinates(poi_schools),\n  to= st_coordinates(poi_fastfood), \n  shortest = FALSE, \n  pairwise = FALSE, \n  quiet=FALSE)\n```\n\nThe result of this computation is a distance matrix that contains the network distances between all origins (i.e. schools) and all destinations (i.e. fast-food outlets):\n\n```{r}\n#| label: 08-distance-matrix-check\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n\n# inspect\ndistance_matrix[1:5,1:5]\n```\n::: {.callout-tip}\nThe above output displays the distance (in metres) between the first five schools and the first five fast-food outlets. The row and column IDs refer to the nearest nodes on the OSM network to which the schools and fast-food outlets were mapped.\n:::\n\nNow that we have the distance matrix, we can aggregate the data and perform accessibility analysis. For example, we can count the number of fast-food outlets within 500 or 1,000 metres walking distance from each school:\n\n```{r} \n#| label: 08-distance-matrix-aggregate\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n\n# fast-food outlets within 500m\npoi_schools$fastfood_500m <- rowSums(distance_matrix <= 500)\n\n# fast-food outlets within 1000m\npoi_schools$fastfood_1000m <- rowSums(distance_matrix <= 1000)\n```\n\n::: {.callout-tip}\nYou can further inspect the results using the `View()` function. \n:::\n\nIn the final step, we can investigate whether there is a relationship between the proximity of fast-food outlets and the relative levels of deprivation in the area. One approach is to calculate the average number of fast-food outlets within 1,000 metres of a school for each LSOA, and then compare these figures to their corresponding IMD deciles.\n\n```{r tidy='styler'} \n#| label: 08-accessibility-join-imd\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| filename: 'R code'\n# read imd dataset\nimd19 <- read_csv('data/attributes/England-IMD-2019.csv')\n\n# join imd\nlsoa11 <- lsoa11 |>\n  left_join(imd19, by = c('lsoa11cd'='lsoa11cd'))\n\n# join schools to their parent lsoa\npoi_schools <- poi_schools |> \n  st_transform(27700) |>\n  st_join(lsoa11)\n```\n\nWe can use this approach to derive the average number of fast-food by IMD decile:\n\n```{r} \n#| label: 08-accessibility-cnt-imd\n#| classes: styled-output\n#| echo: True\n#| eval: True\n#| tidy: True\n#| filename: 'R code'\n# average counts by imd decile\nfastfood_imd <- poi_schools |>\n  group_by(imd_dec) |>\n  mutate(avg_cnt = mean(fastfood_1000m)) |>\n  distinct(imd_dec, avg_cnt) |>\n  arrange(imd_dec)\n\n# inspect\nfastfood_imd\n```\n\nThere appears to be a weak relationship, with schools in more deprived areas having, on average, a higher number of fast-food outlets within a 1,000-metre walking distance. However, this trend is not consistent, as schools in the least deprived areas of Lambeth show the highest accessibility on average.\n\n## Assignment \nAccessibility analysis involves evaluating how easily people can reach essential services, destinations, or opportunities, such as schools, healthcare facilities, or workplaces, from a given location. The CDRC [Access to Healthy Assets & Hazards (AHAH)](https://data.cdrc.ac.uk/dataset/access-healthy-assets-hazards-ahah) dataset, for instance, uses accessibility analysis to quantify how easy it is to reach 'unhealthy' places, such as pubs and gambling outlets, for each neighbourhood in Great Britain. \n\nHaving run through all the steps during the tutorial, we can recreate this analysis ourselves. Using Lambeth as a case study, try to complete the following tasks:\n\n1. Extract all `pubs` from the Point of Interest dataset.\n2. For each LSOA within Lambeth, calculate the average walking distance to the nearest pub.\n3. Create a map of the results.\n\n::: {.callout-note}\nUnlike before, LSOAs are now the unit of analysis. This means you will need to input the LSOA *centroids* into your distance matrix.\n:::\n\n::: {.callout-tip}\nIf you want to take a deep dive into accessibility analysis, there is a great resource that got published recently: [Introduction to urban accessibility: a practical guide in R](https://ipeagit.github.io/intro_access_book/).\n:::\n\n## Before you leave\nThis brings us to the end of the tutorial. You should now have a basic understanding of the concepts behind accessibility analysis, how it can be executed in R, and some of the challenges you may encounter when conducting your own research. With this being said, [you have now reached the end of this week's content](https://www.youtube.com/watch?v=fFw7q-BLxLA). Onwards and upwards! \n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":false,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["assets/styles.css"],"toc":true,"toc-depth":4,"highlight-style":"atom-one","number-sections":true,"output-file":"08-network.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"source","_quarto-vars":{"meta":{"title":"GEOG0030"},"urls":{"w01":"01-spatial.html","w02":"02-operations.html","w03":"03-point-pattern.html","w04":"04-autocorrelation.html","w05":"05-models.html","w06":"06-raster.html","w07":"07-geodemographics.html","w08":"08-network.html","w09":"09-maps.html","w10":"10-datavis.html"},"slides":{"week01":"https://github.com/jtvandijk/GEOG0030/blob/main/slides/w01-geo.pdf","week02":"https://github.com/jtvandijk/GEOG0030/blob/main/slides/w02-geo.pdf","week03":"https://github.com/jtvandijk/GEOG0030/blob/main/slides/w03-geo.pdf","week04":"https://github.com/jtvandijk/GEOG0030/blob/main/slides/w04-geo.pdf","week05":"https://github.com/jtvandijk/GEOG0030/blob/main/slides/w05-geo.pdf","week06":"https://github.com/jtvandijk/GEOG0030/blob/main/slides/w06-geo.pdf","week07":"https://github.com/jtvandijk/GEOG0030/blob/main/slides/w07-geo.pdf","week08":"https://github.com/jtvandijk/GEOG0030/blob/main/slides/w08-geo.pdf","week09":"https://github.com/jtvandijk/GEOG0030/blob/main/slides/w09-geo.pdf","week10":"https://github.com/jtvandijk/GEOG0030/blob/main/slides/w10-geo.pdf"}},"theme":{"light":"flatly","dark":"darkly"},"callout-appearance":"simple","smooth-scroll":true,"number-depth":4,"pagetitle":"{{< var meta.title >}}"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}